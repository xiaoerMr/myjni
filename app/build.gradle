apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a", "x86"//, "arm64-v8a", "x86", "x86_64"//"armeabi",
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '26.1.0'
                }
            }
        }
    }

}
greendao {
    schemaVersion 2//数据库版本号
    daoPackage 'com.sai.myjni.db.table.manager'//设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    //targetGenDirTest：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["hipermission_version"]
    implementation rootProject.ext.dependencies["autosize_version"]
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle_android"]
    implementation rootProject.ext.dependencies["rxlifecycle_components"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["converter_gson"]
    implementation rootProject.ext.dependencies["adapter_rxjava"]
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["logging"] //retrofit的log日志


    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraint"]
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
    implementation rootProject.ext.dependencies["nv_websocket"]
    implementation rootProject.ext.dependencies["Java_WebSocket"]
    implementation rootProject.ext.dependencies["okhttp_mockwebserver"]
    implementation rootProject.ext.dependencies["fastjson"]

    implementation rootProject.ext.dependencies["lifecycle_common"]
    implementation rootProject.ext.dependencies["lifecycle_livedata"]

    implementation rootProject.ext.dependencies["greendao"]
    // add library
    implementation rootProject.ext.dependencies["database_sqlcipher"]
    //加密

    implementation project(':sailib')
    implementation files('libs/AMap3DMap_6.9.0_AMapNavi_6.8.0_AMapSearch_6.9.0_AMapLocation_4.6.0_20190530.jar')
    implementation project(':saihttplib')
}
